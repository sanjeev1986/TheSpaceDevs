// Generated by Dagger (https://dagger.dev).
package com.sample.feature.launches.details;

import com.sample.feature.launches.list.LaunchRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class LaunchDetailsViewModel_Factory_Factory implements Factory<LaunchDetailsViewModel.Factory> {
  private final Provider<String> idProvider;

  private final Provider<LaunchRepository> repositoryProvider;

  public LaunchDetailsViewModel_Factory_Factory(Provider<String> idProvider,
      Provider<LaunchRepository> repositoryProvider) {
    this.idProvider = idProvider;
    this.repositoryProvider = repositoryProvider;
  }

  @Override
  public LaunchDetailsViewModel.Factory get() {
    return newInstance(idProvider.get(), repositoryProvider.get());
  }

  public static LaunchDetailsViewModel_Factory_Factory create(Provider<String> idProvider,
      Provider<LaunchRepository> repositoryProvider) {
    return new LaunchDetailsViewModel_Factory_Factory(idProvider, repositoryProvider);
  }

  public static LaunchDetailsViewModel.Factory newInstance(String id, LaunchRepository repository) {
    return new LaunchDetailsViewModel.Factory(id, repository);
  }
}
