// Generated by Dagger (https://dagger.dev).
package com.sample.feature.launches.details;

import com.sample.feature.launches.list.LaunchRepository;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class LaunchDetailsActivity_MembersInjector implements MembersInjector<LaunchDetailsActivity> {
  private final Provider<LaunchRepository> repositoryProvider;

  public LaunchDetailsActivity_MembersInjector(Provider<LaunchRepository> repositoryProvider) {
    this.repositoryProvider = repositoryProvider;
  }

  public static MembersInjector<LaunchDetailsActivity> create(
      Provider<LaunchRepository> repositoryProvider) {
    return new LaunchDetailsActivity_MembersInjector(repositoryProvider);
  }

  @Override
  public void injectMembers(LaunchDetailsActivity instance) {
    injectRepository(instance, repositoryProvider.get());
  }

  @InjectedFieldSignature("com.sample.feature.launches.details.LaunchDetailsActivity.repository")
  public static void injectRepository(LaunchDetailsActivity instance, LaunchRepository repository) {
    instance.repository = repository;
  }
}
